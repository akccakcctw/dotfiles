# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# compatible with MacOS
if [[ $(uname -s) == Darwin ]]; then
  if brew list --formula | grep coreutils > /dev/null; then
    PATH="$(brew --prefix coreutils)/libexec/gnubin:$PATH"
    eval `gdircolors -b $HOME/.dir_colors`
  fi
fi

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="agnoster"
ZSH_THEME="akccakcctw"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  z
)

source $ZSH/oh-my-zsh.sh

# --- plugins --- {{{
if [[ -f /etc/arch-release ]]; then
  package_list=(
    diff-so-fancy
    fzf
    zsh-autosuggestions
    zsh-completions
    zsh-syntax-highlighting
  )
  if ! pacman -Qq ${package_list[@]} > /dev/null 2>&1; then
    echo "You're using Archlinux! Use pacman to manage the following nice tools:"
    echo ${package_list[@]}
    sudo pacman -S --needed ${package_list[@]}
  fi
fi

# fzf {{{
if [[ -x /usr/bin/fzf && -f /usr/share/fzf/key-bindings.zsh &&
    -f /usr/share/fzf/completion.zsh ]]; then
  source /usr/share/fzf/key-bindings.zsh
  source /usr/share/fzf/completion.zsh
else
  if ! [[ -f ~/.fzf.zsh ]] ; then
    if ! [[ -f ~/.fzf/install ]] ; then
      rm -rf ~/.fzf
      git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    fi
    ~/.fzf/install --all
  fi
  source ~/.fzf.zsh
fi
# }}}

# zplug {{{
if ! [[ -f "${HOME}/.zplug/init.zsh" ]]; then
  curl -sL https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh
fi
zstyle :zplug:tag depth 1
source "${HOME}/.zplug/init.zsh"

zplug "zplug/zplug"
zplug "mafredri/zsh-async", use:async.zsh
zplug "lukechilds/zsh-better-npm-completion", defer:2
zplug "akccakcctw/zsh-better-pnpm-completion", defer:2

if [[ -f /etc/arch-release ]]; then
  if [[ -d /usr/share/zsh/plugins/zsh-syntax-highlighting ]]; then
    zplug "/usr/share/zsh/plugins/zsh-syntax-highlighting", from:local, defer:3
  fi
  if [[ -d /usr/share/zsh/plugins/zsh-autosuggestions ]]; then
    zplug "/usr/share/zsh/plugins/zsh-autosuggestions", from:local, defer:2
  fi
else
  zplug "zsh-users/zsh-completions", use:"*.plugin.zsh"
  zplug "so-fancy/diff-so-fancy", as:command, use:diff-so-fancy
  zplug "zsh-users/zsh-syntax-highlighting", use:"*.plugin.zsh", defer:3
fi

export ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

if ! zplug check --verbose; then
  zplug install
fi

zplug load
# }}}

# }}}

# User configuration

# export REVIEW_BASE=HEAD^ # for GitHub code review
export REVIEW_BASE=develop # for GitHub code review

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# aliases {{{
source ~/.bash_aliases
# }}}
#

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
  source /etc/profile.d/vte.sh
fi

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export PATH="/usr/local/opt/node@10/bin:$PATH"
export PATH="$HOME/Library/Python/3.7/bin:$PATH"

# vim:fdm=marker:foldlevel=0

eval $(thefuck --alias)

# tabtab source for packages
# uninstall by removing these lines
# [[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]] && . ~/.config/tabtab/zsh/__tabtab.zsh || true

# pnpm
export PNPM_HOME="${HOME}/.local/share/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end
